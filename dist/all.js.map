{"version":3,"sources":["js/script.js"],"names":["seatsContainer","document","querySelector","seats","querySelectorAll","allSeats","count","getElementById","total","movieSelect","ticketPrice","value","populateUI","selectedSeats","JSON","parse","localStorage","getItem","length","forEach","seat","index","indexOf","classList","add","selectedMovieIndex","selectedIndex","updateSelectedCount","seatsIndex","map","setSeatsData","selectedSeatsCount","innerText","setMovieData","movieIndex","moviePrice","setItem","stringify","addEventListener","e","target","contains","toggle"],"mappings":"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","file":"all.js","sourcesContent":["const seatsContainer = document.querySelector('.seats_container');\n//seats non occupied\nconst seats = seatsContainer.querySelectorAll('.seat:not(.occupied)');\nconst allSeats = seatsContainer.querySelectorAll('.seat');\n//results\nconst count = document.getElementById('count');\nconst total = document.getElementById('total');\n//select\nconst movieSelect = document.getElementById('movie_picker');\n//select price value as number\nlet ticketPrice = +movieSelect.value;\n\n//Get data from localstorage and populate UI\nconst populateUI = () => {\n    const selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\n\n    //check if value exists in the storage\n    if (selectedSeats !==  null && selectedSeats.length > 0) {\n        \n        allSeats.forEach((seat, index) => {\n            //if an index seat match with the localstorage then update UI\n            if(selectedSeats.indexOf(index) > -1) {\n                seat.classList.add('selected');\n            }\n        });\n    }\n\n    const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\n    //check if value exists in the storage\n    if (selectedMovieIndex !==  null) {\n        movieSelect.selectedIndex = selectedMovieIndex;\n    }\n}\n\n//update total and count function\nconst updateSelectedCount = () => {\n\n    //convert nodelist of selected seats into arr\n    const selectedSeats = [...seatsContainer.querySelectorAll(\".seat.selected\")];\n    \n    //Map through array\n    //return a new array of indexes, each index indentifies a seat\n    const seatsIndex = selectedSeats.map(seat => [...allSeats].indexOf(seat));\n   \n    // Save selected seats indexes to storage\n    setSeatsData(seatsIndex);\n\n    //updating UI with new total and count\n    const selectedSeatsCount = selectedSeats.length;\n    count.innerText = selectedSeatsCount;\n    total.innerText = selectedSeatsCount * ticketPrice;\n}\n\n// Save selected movie index and price to storage\nconst setMovieData = (movieIndex, moviePrice) => {\n    localStorage.setItem('selectedMovieIndex', movieIndex);\n    localStorage.setItem('selectedMoviePrice', moviePrice);\n};\n// Save selected seats indexes to storage\nconst setSeatsData = (seatsIndex) => {\n    localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\n};\n\n\n\n\n//***** HANDLERS\n\n//movie click event handler\nmovieSelect.addEventListener('change', e => {\n    ticketPrice = +e.target.value;\n    //HTMLSelectElement.selectedIndex reflects the index of the first or last selected <option> element\n    setMovieData(e.target.selectedIndex, e.target.value);\n\n    updateSelectedCount();\n});\n//seat click event handler\nseatsContainer.addEventListener('click', e => {\n    if (e.target.classList.contains('seat') && !e.target.classList.contains('occupied')) {\n        e.target.classList.toggle('selected');\n\n        updateSelectedCount();\n    }\n});\n\n\n//Get data from localstorage and populate UI\npopulateUI();\n//initial count and total set\nupdateSelectedCount();"]}